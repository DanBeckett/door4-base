<?php

/**
 * @file
 * Functions to support theming in the egopowerplus theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;

function egopowerplus_theme_suggestions_block_alter(&$suggestions, $variables) {

  /* We use 'panels' to allow us to reuse content block types in body content.
  The following adds the general "block type" to the theme suggestions, so we can style them globally */	
  $content = $variables['elements']['content'];
  if (isset($content['#block_content']) && $content['#block_content'] instanceof \Drupal\block_content\BlockContentInterface) {
    $suggestions[] = 'block__' . $content['#block_content']->bundle();
  }
}

function egopowerplus_preprocess_html(&$variables) {
  //enable is_front variable
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }

  //pull our custom GTM tracking code in as a variable twig can call
  $variables['gtm'] = theme_get_setting('gtm');
  $variables['bvjs'] = theme_get_setting('bvjs');
  $variables['cookie_url'] = theme_get_setting('cookie_url');

  //if on a product, grab values needed for meta tag
  if(isset($variables['node_type'])) {
    if(($variables['node_type'] == 'product' || $variables['node_type'] == 'accessory' || $variables['node_type'] == 'battery' || $variables['node_type'] == 'blower' || $variables['node_type'] == 'chainsaw' || $variables['node_type'] == 'hedge_trimmer' || $variables['node_type'] == 'line_trimmer' || $variables['node_type'] == 'mower' || $variables['node_type'] == 'multi_tool') && ($node = \Drupal::routeMatch()->getParameter('node'))) {
  	  //add meta as variables as it needs to go into head.
      //originally used preset fields, but now we're auto-genning.

      //$variables['meta_title'] = $node->field_meta_title->value;
  	  //$variables['meta_description'] = $node->field_meta_description->value;

      $variables['product_name'] = strip_tags($node->field_product_name->value);
      $variables['sku'] = $node->field_sku->value;
      $variables['remove_reviews'] = $node->field_remove_reviews->value;
      //$variables['product_type'] = $node->field_product_type;
      
  	}
    if($variables['node_type'] == 'article' && $node = \Drupal::routeMatch()->getParameter('node')) {
      $variables['title'] = $node->title->value;
    }
  }
}

function egopowerplus_preprocess_block(&$variables) {

  //force product downloads block (0cba55d0-a4a7-4a6a-a0a7-baceb682f51e) to never cache
  if($variables['derivative_plugin_id'] == '0cba55d0-a4a7-4a6a-a0a7-baceb682f51e') {
    $variables['#cache']['max-age'] = 0;
  }
  if($variables['label'] == 'Product BazaarVoice Questions Block') {
    $node = \Drupal::routeMatch()->getParameter('node');
    //add variables for the downloads
    $variables['sku'] = $node->field_sku;
  }
  if($variables['label'] == 'Product BazaarVoice Reviews Block') {
    $node = \Drupal::routeMatch()->getParameter('node');
    //add variables for the downloads
    $variables['sku'] = $node->field_sku;
  }
  if($variables['label'] == 'Product Downloads Block') {
    $node = \Drupal::routeMatch()->getParameter('node');
    //add variables for the downloads
    $variables['product_manual'] = $node->field_download_product_manual;
    $variables['safety_sheet'] = $node->field_download_safety_sheet;
  }
}

/**
* Implements hook_preprocess_node() for NODE document templates.
*/
function egopowerplus_preprocess_node(&$variables) {
  // Allowed view modes
  $view_mode = $variables['view_mode']; // Retrieve view mode
  $allowed_view_modes = ['full']; // Array of allowed view modes (for performance so as to not execute on unneeded nodes)
 
  // If view mode is in allowed view modes list, pass to THEME_add_regions_to_node()
  if(in_array($view_mode, $allowed_view_modes)) {
    // Allowed regions (for performance so as to not execute for unneeded region)
    $allowed_regions = ['related_articles'];
    egopowerplus_add_regions_to_node($allowed_regions, $variables);
  }

  // Change how post time stamps are displayed
  $date = $variables['node']->getCreatedTime();
  $variables['date'] = \Drupal::service('date.formatter')->format($date, 'teaser_short_date');

  //get language so we can get specific versions of bazaarvoice css
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['language'] = $language;
}
 
/**
* egopowerplus_add_regions_to_node
*/
 
function egopowerplus_add_regions_to_node($allowed_regions, &$variables) {
  // Retrieve active theme
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  // Retrieve theme regions
  $available_regions = system_region_list($theme, 'REGIONS_ALL');
  // Validate allowed regions with available regions
  $regions = array_intersect(array_keys($available_regions), $allowed_regions);
  // For each region
  foreach ($regions as $key => $region) {
    // Load region blocks
    $blocks = entity_load_multiple_by_properties('block', array('theme' => $theme, 'region' => $region));
    // Sort â€˜em
    uasort($blocks, 'Drupal\block\Entity\Block::sort');
    // Capture viewable blocks and their settings to $build
    $build = array();
    foreach ($blocks as $key => $block) {
      if ($block->access('view')) {
        $build[$key] = entity_view($block, 'block');
      }
    }
    // Add build to region
    $variables[$region] = $build;
  }
}

/**
* egopowerplus_form_system_theme_settings_alter - Add custom settings in admin/appearance/settings/egopowerplus
*/

function egopowerplus_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  $form['gtm'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Google Tag Manager Tracking Code'),
    '#default_value' => theme_get_setting('gtm'),
    '#description'   => t("Enter the GTM code for this site (for example GTM-XXYYZZ)."),
  );

  $form['bvjs'] = array(
    '#type'          => 'textfield',
    '#title'         => t('BazaarVoice JavaScript URL'),
    '#default_value' => theme_get_setting('bvjs'),
    '#description'   => t("Enter the resource location for the BazaarVoice js for this nationality"),
  );
  $form['cookie_url'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Cookie Policy URL'),
    '#default_value' => theme_get_setting('cookie_url'),
    '#description'   => t("Enter the resource location for this sites Cookie Policy page (to be included in the cookie pop-up)"),
  );
}

/*
*
*/

// function egopowerplus_preprocess_search_result(&$variables) {
//   $result = $variables['result'];
//   $variables['type'] = $result['type'];
//   if($result['type'] == 'Press Release') {
//     //WE NEED TO IDENTIFY THE DOWNLOAD LINK
//     print_r($result);
//   }
// }
