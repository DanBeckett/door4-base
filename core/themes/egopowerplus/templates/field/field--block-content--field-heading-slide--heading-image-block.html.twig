{#
/**
 * @file
 * Theme override for a field - labels stripped out.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
    'field__item hero'
  ]
%}

  {% for item in items %}
    <li class="background-stretch-{{ item.content['#paragraph'].field_background_stretch.0.value }} background-color-{{ item.content['#paragraph'].field_background_overflow_colour.0.value }}">
      {% if item.content['#paragraph'].field_link.0.uri is not empty %}
        <a href="{{ item.content['#paragraph'].field_link.0.url }}">
      {% endif %}
          <div{{ item.attributes.addClass(classes) }} style="background-image: url('{{ file_url(item.content['#paragraph'].field_image.entity.uri.value) }}');">
            {% if item.content['#paragraph'].field_video is not empty %}
              <div class="video_wrapper">
                <video autoplay loop>
                  <source src="{{ file_url(item.content['#paragraph'].field_video.entity.uri.0.value) }}" type="video/mp4">
                </video>
              </div>
            {% endif %}
            {% if item.content['#paragraph'].field_heading_content is not empty %}
              <div class="caption">{{ item.content['#paragraph'].field_heading_content.value|raw }}</div>
            {% endif %}
          </div>
      {% if item.content['#paragraph'].field_link.0.uri is not empty %}
        </a>
      {% endif %}
    </li>
  {% endfor %}

